##
# Server
##
server:
  error:
    include-message: always
    include-exception: false
    include-stacktrace: on_param
    include-binding-errors: always

##
# Spring
##
spring:
  output:
    ansi:
      enabled: ALWAYS
  ##
  # Jackson e JSON
  ##
  jackson:
    serialization:
      indent_output: true
  datasource:
    driverClassName: org.postgresql.Driver
    password: ${DB_PASSWORD:password}
    url: ${DB_URL:jdbc:postgresql://localhost:5433/propostas}
    username: ${DB_USERNAME:postgres}
    hikari:
      maximum-pool-size: 10
      connection-timeout: 5000
  ##
  # JPA e Hibernate
  ##
  jpa:
    hibernate:
      ddl-auto: ${DDL_MODE:update}
    open-in-view: false
    properties:
      hibernate:
        format_sql: ${FORMAT_SQL:true}
        jdbc:
          batch_size: 10
          order_inserts: true
          order_updates: true
    show-sql: ${SHOW_SQL:true}

##
# DataSource Proxy
# (https://github.com/gavlyukovskiy/spring-boot-data-source-decorator)
# It allows us to log the SQL statements that are batched by Hibernate batchSize
##
decorator:
  datasource:
    datasource-proxy:
      multiline: true
      query:
        enable-logging: true
        log-level: info

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always




##
# Integracoes
##
integracoes:
  financeiro:
    url: ${INTEGRACAO_FINANCEIRO_URL:http://localhost:9999}
    port: 9999
  cartoes:
    url: ${INTEGRACAO_CARTOES_URL:http://localhost:8888}
    port: 8888

##
# Open Feign
##
feign:
  client:
    config:
      financeiroClient:
        loggerLevel: full
        connectionTimeout: 5000
        readTimeout: 10000
      cartaoClient:
        loggerLevel: full
        connectionTimeout: 5000
        readTimeout: 10000

logging.level.br.com.zup.edu.propostas.jobs.CartaoClient: DEBUG
logging.level.br.com.zup.edu.propostas.controller.FinanceiroClient: DEBUG


##
# Jobs
##

jobs.associaPropostas.ativo: true

